Configuring Data Sources in SpringBoot: 


---> In order for a data source instance to be created, the surrounding runtime environment must contain the appropriate DBMS server / platform on it. 

---> For the case of MySQL, this is the MySQL server, which must be set up on the runtime environemnt. 

---> The steps include: 

	1. Installing and configuring the appropriate DMBS server / instance. 

	2. Ensuring the appropriate SpringBoot maven dependencies exist for that data source type (e.g. MySQL drivers, spring-boot-starter JPA). 

	3. Updating the application.properties file with appropriate property key-value pairs: 

		# MySQL
		spring.datasource.url=jdbc:mysql://localhost:3306/test
		spring.datasource.username=dbuser
		spring.datasource.password=dbpass
		spring.datasource.driver-class-name=com.mysql.jdbc.Driver
		spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect


	4. Declare the appropriate DataSource bean to ensure bean injection of the data source can happen on running of the app. 


	@Bean(name = "mySqlDataSource")
   
    	public DataSource mySqlDataSource()
    	{
        	DataSourceBuilder dataSourceBuilder = DataSourceBuilder.create();
        	dataSourceBuilder.url("jdbc:mysql://localhost/testdb");
       		dataSourceBuilder.username("dbuser");
        	dataSourceBuilder.password("dbpass");
        	return dataSourceBuilder.build();
    	}

	---> This contains the necessary steps to configure and inject the bean into the system. 
